{"version":3,"file":"cypherService.js","names":["CypherService","constructor","graphRepository","_graphRepository","executeCypher","query","Error","resultSet","execute","createResult","err","result","targetItem","Array","isArray","pop","cypherRow","rows","columns","_getColumns","rowCount","_getRowCount","command","_getCommand","fields","map","field","name","_convertRowToResult","row","convertedObject","k","typeName","convertPath","convertVertex","convertEdge","vertices","edges","idx","push","label","id","start","end","props","oid","properties"],"sources":["../../src/services/cypherService.ts"],"sourcesContent":["/**\n * File: /src/services/cypherService.ts\n * Project: apache-age-client\n * File Created: 13-09-2022 05:50:34\n * Author: Apache Software Foundation\n * -----\n * Last Modified: 13-09-2022 07:27:40\n * Modified By: Clay Risser\n * -----\n * Risser Labs LLC (c) Copyright 2022\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { QueryResult } from \"pg\";\nimport { GraphRepository } from \"../graphRepository\";\nimport {\n  Edge,\n  EdgeResult,\n  Path,\n  PathResult,\n  Result,\n  Vertex,\n  VertexResult,\n} from \"../types\";\n\nexport class CypherService {\n  private _graphRepository: GraphRepository;\n\n  constructor(graphRepository: GraphRepository) {\n    this._graphRepository = graphRepository;\n  }\n\n  async executeCypher(query: string) {\n    if (!query) {\n      throw new Error(\"query not entered!\");\n    } else {\n      try {\n        let resultSet = await this._graphRepository.execute(query);\n        return this.createResult(resultSet);\n      } catch (err) {\n        throw err;\n      }\n    }\n  }\n\n  private createResult(resultSet: QueryResult) {\n    let result;\n    let targetItem = resultSet;\n    if (Array.isArray(resultSet)) {\n      targetItem = resultSet.pop();\n    }\n    let cypherRow = targetItem.rows;\n    result = {\n      rows: cypherRow,\n      columns: this._getColumns(targetItem),\n      rowCount: this._getRowCount(targetItem),\n      command: this._getCommand(targetItem),\n    };\n    return result;\n  }\n\n  private _getColumns(resultSet: QueryResult) {\n    return resultSet.fields.map((field) => field.name);\n  }\n\n  private _getRowCount(resultSet: QueryResult) {\n    return resultSet.rowCount;\n  }\n\n  private _getCommand(resultSet: QueryResult) {\n    return resultSet.command;\n  }\n\n  private _convertRowToResult(resultSet: QueryResult): Result[] {\n    return resultSet.rows.map((row) => {\n      let convertedObject: Result = {};\n      for (let k in row) {\n        if (row[k]) {\n          let typeName = row[k].constructor.name;\n          if (typeName === \"Path\") {\n            convertedObject[k] = this.convertPath(row[k]);\n          } else if (typeName === \"Vertex\") {\n            convertedObject[k] = this.convertVertex(row[k] as VertexResult);\n          } else if (typeName === \"Edge\") {\n            convertedObject[k] = this.convertEdge(row[k] as EdgeResult);\n          } else {\n            convertedObject[k] = row[k];\n          }\n        } else {\n          convertedObject[k] = null;\n        }\n      }\n      return convertedObject;\n    });\n  }\n\n  private convertPath({ vertices, edges }: PathResult): Path {\n    const result: Path = [];\n    for (let idx in vertices) {\n      result.push(this.convertVertex(vertices[idx]));\n    }\n    for (let idx in edges) {\n      result.push(this.convertEdge(edges[idx]));\n    }\n    return result;\n  }\n\n  private convertEdge({ label, id, start, end, props }: EdgeResult): Edge {\n    return {\n      label: label,\n      id: `${id.oid}.${id.id}`,\n      start: `${start.oid}.${start.id}`,\n      end: `${end.oid}.${end.id}`,\n      properties: props,\n    };\n  }\n\n  private convertVertex({ label, id, props }: VertexResult): Vertex {\n    return {\n      label: label,\n      id: `${id.oid}.${id.id}`,\n      properties: props,\n    };\n  }\n}\n"],"mappings":"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"}