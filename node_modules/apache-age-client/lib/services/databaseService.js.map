{"version":3,"file":"databaseService.js","names":["logger","console","DatabaseService","constructor","_graphRepository","getMetaData","connectionInfo","getConnectionInfo","database","edges","getEdges","graph","nodes","getNodes","propertyKeys","getPropertyKeys","role","getRole","error","getGraphLabels","Error","graphRepository","queryResult","execute","getQuery","flavor","rows","getGraphLabelCount","labelName","labelKind","query","util","format","user","connectDatabase","GraphRepository","client","getConnection","release","err","disconnectDatabase","warn","isRelease","releaseConnection","getConnectionStatus","isConnected"],"sources":["../../src/services/databaseService.ts"],"sourcesContent":["/**\n * File: /src/services/databaseService.ts\n * Project: apache-age-client\n * File Created: 13-09-2022 05:50:34\n * Author: Apache Software Foundation\n * -----\n * Last Modified: 13-09-2022 07:29:23\n * Modified By: Clay Risser\n * -----\n * Risser Labs LLC (c) Copyright 2022\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as util from \"util\";\nimport { PoolClient } from \"pg\";\nimport { ConnectionInfo } from \"../types\";\nimport { GraphRepository } from \"../graphRepository\";\nimport { getQuery } from \"../tools/sqlFlavorManager\";\n\nconst logger = console;\n\nexport class DatabaseService {\n  private _graphRepository: GraphRepository | null;\n\n  constructor() {\n    this._graphRepository = null;\n  }\n\n  async getMetaData() {\n    try {\n      const connectionInfo = this.getConnectionInfo();\n      return {\n        database: connectionInfo.database,\n        edges: await this.getEdges(),\n        graph: connectionInfo.graph,\n        nodes: await this.getNodes(),\n        propertyKeys: await this.getPropertyKeys(),\n        role: await this.getRole(),\n      };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async getGraphLabels() {\n    if (!this._graphRepository) throw new Error(\"not connected\");\n    const graphRepository = this._graphRepository;\n    try {\n      const queryResult = await graphRepository.execute(\n        getQuery(\"graph_labels\", graphRepository.flavor),\n        [this.getConnectionInfo().graph]\n      );\n      return queryResult.rows;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async getGraphLabelCount(labelName: string, labelKind: string) {\n    if (!this._graphRepository) throw new Error(\"not connected\");\n    const graphRepository = this._graphRepository;\n    let query = \"\";\n    if (labelKind === \"v\") {\n      query = util.format(\n        getQuery(\"label_count_vertex\", graphRepository.flavor),\n        `${this.getConnectionInfo().graph}.${labelName}`\n      );\n    } else if (labelKind === \"e\") {\n      query = util.format(\n        getQuery(\"label_count_edge\", graphRepository.flavor),\n        `${this.getConnectionInfo().graph}.${labelName}`\n      );\n    }\n    const queryResult = await graphRepository.execute(query);\n    return queryResult.rows;\n  }\n\n  async getNodes() {\n    if (!this._graphRepository) throw new Error(\"not connected\");\n    const graphRepository = this._graphRepository;\n    let queryResult = await graphRepository.execute(\n      util.format(\n        getQuery(\"meta_nodes\", graphRepository.flavor),\n        graphRepository.graph,\n        graphRepository.graph\n      )\n    );\n    return queryResult.rows;\n  }\n\n  async getEdges() {\n    if (!this._graphRepository) throw new Error(\"not connected\");\n    let graphRepository = this._graphRepository;\n    let queryResult = await graphRepository.execute(\n      util.format(\n        getQuery(\"meta_edges\", graphRepository.flavor),\n        graphRepository.graph,\n        graphRepository.graph\n      )\n    );\n    return queryResult.rows;\n  }\n\n  async getPropertyKeys() {\n    if (!this._graphRepository) throw new Error(\"not connected\");\n    let graphRepository = this._graphRepository;\n    let queryResult = await graphRepository.execute(\n      getQuery(\"property_keys\", graphRepository.flavor)\n    );\n    return queryResult.rows;\n  }\n\n  async getRole() {\n    if (!this._graphRepository) throw new Error(\"not connected\");\n    const graphRepository = this._graphRepository;\n    let queryResult = await graphRepository.execute(\n      getQuery(\"get_role\", graphRepository.flavor),\n      [this.getConnectionInfo().user]\n    );\n    return queryResult.rows[0];\n  }\n\n  async connectDatabase(connectionInfo: ConnectionInfo) {\n    let graphRepository = this._graphRepository;\n    if (graphRepository == null) {\n      this._graphRepository = new GraphRepository(connectionInfo);\n      graphRepository = this._graphRepository;\n    }\n    try {\n      const client = await GraphRepository.getConnection(\n        graphRepository.getConnectionInfo(),\n        true\n      );\n      if ((client as PoolClient).release) (client as PoolClient).release();\n    } catch (err) {\n      this._graphRepository = null;\n      throw err;\n    }\n  }\n\n  async disconnectDatabase() {\n    if (!this._graphRepository) {\n      logger.warn(\"already disconnected\");\n      return false;\n    } else {\n      const isRelease = await this._graphRepository.releaseConnection();\n      if (isRelease) {\n        this._graphRepository = null;\n        return true;\n      } else {\n        logger.error(\"failed to release connection\");\n        return false;\n      }\n    }\n  }\n\n  async getConnectionStatus() {\n    let graphRepository = this._graphRepository;\n    if (!graphRepository) return false;\n    try {\n      const client = await GraphRepository.getConnection(\n        graphRepository.getConnectionInfo()\n      );\n      if ((client as PoolClient).release) (client as PoolClient).release();\n    } catch (err) {\n      return false;\n    }\n    return true;\n  }\n\n  getConnectionInfo() {\n    if (!this._graphRepository) throw new Error(\"not connected\");\n    return this._graphRepository.getConnectionInfo();\n  }\n\n  isConnected() {\n    return !!this._graphRepository;\n  }\n}\n"],"mappings":"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"}