(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["exports", "antlr4", "./AgtypeLexer", "./AgtypeParser", "./customAgTypeListener"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require("antlr4"), require("./AgtypeLexer"), require("./AgtypeParser"), require("./customAgTypeListener"));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.antlr4, global.AgtypeLexer, global.AgtypeParser, global.customAgTypeListener);
    global.ageParser = mod.exports;
  }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports, _antlr, _AgtypeLexer, _AgtypeParser, _customAgTypeListener) {
  "use strict";

  var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.agTypeParse = agTypeParse;
  _exports.setAgeTypes = setAgeTypes;
  _antlr = _interopRequireDefault(_antlr);
  _AgtypeLexer = _interopRequireDefault(_AgtypeLexer);
  _AgtypeParser = _interopRequireDefault(_AgtypeParser);

  /**
   * File: /src/tools/ageParser.ts
   * Project: apache-age-client
   * File Created: 13-09-2022 04:45:20
   * Author: Apache Software Foundation
   * -----
   * Last Modified: 13-09-2022 07:01:22
   * Modified By: Clay Risser
   * -----
   * Risser Labs LLC (c) Copyright 2022
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *     http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */
  function agTypeParse(input) {
    const chars = new _antlr.default.InputStream(input);
    const lexer = new _AgtypeLexer.default(chars);
    const tokens = new _antlr.default.CommonTokenStream(lexer);
    const parser = new _AgtypeParser.default(tokens);
    parser.buildParseTrees = true;
    const tree = parser.agType();
    const printer = new _customAgTypeListener.CustomAgTypeListener();

    _antlr.default.tree.ParseTreeWalker.DEFAULT.walk(printer, tree);

    return printer.getResult();
  }

  async function setAgeTypes(client, types) {
    await client.query(`
        CREATE EXTENSION IF NOT EXISTS age;
        LOAD 'age';
        SET search_path = ag_catalog, "$user", public;
    `);
    const oidResults = await client.query(`
        select typelem
        from pg_type
        where typname = '_agtype';`);
    if (oidResults.rows.length < 1) throw new Error();
    types.setTypeParser(oidResults.rows[0].typelem, agTypeParse);
  }
});
//# sourceMappingURL=ageParser.js.map