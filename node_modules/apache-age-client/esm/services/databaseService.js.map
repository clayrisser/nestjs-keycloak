{"version":3,"file":"databaseService.js","names":["util","GraphRepository","getQuery","logger","console","DatabaseService","constructor","_graphRepository","getMetaData","connectionInfo","getConnectionInfo","database","edges","getEdges","graph","nodes","getNodes","propertyKeys","getPropertyKeys","role","getRole","error","getGraphLabels","Error","graphRepository","queryResult","execute","flavor","rows","getGraphLabelCount","labelName","labelKind","query","format","user","connectDatabase","client","getConnection","release","err","disconnectDatabase","warn","isRelease","releaseConnection","getConnectionStatus","isConnected"],"sources":["../../src/services/databaseService.ts"],"sourcesContent":["/**\n * File: /src/services/databaseService.ts\n * Project: apache-age-client\n * File Created: 13-09-2022 05:50:34\n * Author: Apache Software Foundation\n * -----\n * Last Modified: 13-09-2022 07:29:23\n * Modified By: Clay Risser\n * -----\n * Risser Labs LLC (c) Copyright 2022\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as util from \"util\";\nimport { PoolClient } from \"pg\";\nimport { ConnectionInfo } from \"../types\";\nimport { GraphRepository } from \"../graphRepository\";\nimport { getQuery } from \"../tools/sqlFlavorManager\";\n\nconst logger = console;\n\nexport class DatabaseService {\n  private _graphRepository: GraphRepository | null;\n\n  constructor() {\n    this._graphRepository = null;\n  }\n\n  async getMetaData() {\n    try {\n      const connectionInfo = this.getConnectionInfo();\n      return {\n        database: connectionInfo.database,\n        edges: await this.getEdges(),\n        graph: connectionInfo.graph,\n        nodes: await this.getNodes(),\n        propertyKeys: await this.getPropertyKeys(),\n        role: await this.getRole(),\n      };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async getGraphLabels() {\n    if (!this._graphRepository) throw new Error(\"not connected\");\n    const graphRepository = this._graphRepository;\n    try {\n      const queryResult = await graphRepository.execute(\n        getQuery(\"graph_labels\", graphRepository.flavor),\n        [this.getConnectionInfo().graph]\n      );\n      return queryResult.rows;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async getGraphLabelCount(labelName: string, labelKind: string) {\n    if (!this._graphRepository) throw new Error(\"not connected\");\n    const graphRepository = this._graphRepository;\n    let query = \"\";\n    if (labelKind === \"v\") {\n      query = util.format(\n        getQuery(\"label_count_vertex\", graphRepository.flavor),\n        `${this.getConnectionInfo().graph}.${labelName}`\n      );\n    } else if (labelKind === \"e\") {\n      query = util.format(\n        getQuery(\"label_count_edge\", graphRepository.flavor),\n        `${this.getConnectionInfo().graph}.${labelName}`\n      );\n    }\n    const queryResult = await graphRepository.execute(query);\n    return queryResult.rows;\n  }\n\n  async getNodes() {\n    if (!this._graphRepository) throw new Error(\"not connected\");\n    const graphRepository = this._graphRepository;\n    let queryResult = await graphRepository.execute(\n      util.format(\n        getQuery(\"meta_nodes\", graphRepository.flavor),\n        graphRepository.graph,\n        graphRepository.graph\n      )\n    );\n    return queryResult.rows;\n  }\n\n  async getEdges() {\n    if (!this._graphRepository) throw new Error(\"not connected\");\n    let graphRepository = this._graphRepository;\n    let queryResult = await graphRepository.execute(\n      util.format(\n        getQuery(\"meta_edges\", graphRepository.flavor),\n        graphRepository.graph,\n        graphRepository.graph\n      )\n    );\n    return queryResult.rows;\n  }\n\n  async getPropertyKeys() {\n    if (!this._graphRepository) throw new Error(\"not connected\");\n    let graphRepository = this._graphRepository;\n    let queryResult = await graphRepository.execute(\n      getQuery(\"property_keys\", graphRepository.flavor)\n    );\n    return queryResult.rows;\n  }\n\n  async getRole() {\n    if (!this._graphRepository) throw new Error(\"not connected\");\n    const graphRepository = this._graphRepository;\n    let queryResult = await graphRepository.execute(\n      getQuery(\"get_role\", graphRepository.flavor),\n      [this.getConnectionInfo().user]\n    );\n    return queryResult.rows[0];\n  }\n\n  async connectDatabase(connectionInfo: ConnectionInfo) {\n    let graphRepository = this._graphRepository;\n    if (graphRepository == null) {\n      this._graphRepository = new GraphRepository(connectionInfo);\n      graphRepository = this._graphRepository;\n    }\n    try {\n      const client = await GraphRepository.getConnection(\n        graphRepository.getConnectionInfo(),\n        true\n      );\n      if ((client as PoolClient).release) (client as PoolClient).release();\n    } catch (err) {\n      this._graphRepository = null;\n      throw err;\n    }\n  }\n\n  async disconnectDatabase() {\n    if (!this._graphRepository) {\n      logger.warn(\"already disconnected\");\n      return false;\n    } else {\n      const isRelease = await this._graphRepository.releaseConnection();\n      if (isRelease) {\n        this._graphRepository = null;\n        return true;\n      } else {\n        logger.error(\"failed to release connection\");\n        return false;\n      }\n    }\n  }\n\n  async getConnectionStatus() {\n    let graphRepository = this._graphRepository;\n    if (!graphRepository) return false;\n    try {\n      const client = await GraphRepository.getConnection(\n        graphRepository.getConnectionInfo()\n      );\n      if ((client as PoolClient).release) (client as PoolClient).release();\n    } catch (err) {\n      return false;\n    }\n    return true;\n  }\n\n  getConnectionInfo() {\n    if (!this._graphRepository) throw new Error(\"not connected\");\n    return this._graphRepository.getConnectionInfo();\n  }\n\n  isConnected() {\n    return !!this._graphRepository;\n  }\n}\n"],"mappings":"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"}