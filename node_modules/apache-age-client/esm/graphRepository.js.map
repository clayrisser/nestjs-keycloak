{"version":3,"file":"graphRepository.js","names":["pg","types","flavors","pgConfig","setAgeTypes","GraphRepository","constructor","host","port","database","graph","user","password","flavor","_database","_graph","_host","_password","_pool","_port","_user","AGE","getConnection","closeConnection","client","Client","connect","Error","end","newConnectionPool","poolConnectionConfig","Pool","execute","query","params","result","err","release","getPoolConnectionInfo","releaseConnection","connectionTimeoutMillis","idleTimeoutMillis","max","getConnectionInfo"],"sources":["../src/graphRepository.ts"],"sourcesContent":["/**\n * File: /src/graphRepository.ts\n * Project: apache-age-client\n * File Created: 13-09-2022 05:34:30\n * Author: Apache Software Foundation\n * -----\n * Last Modified: 13-09-2022 07:56:39\n * Modified By: Clay Risser\n * -----\n * Risser Labs LLC (c) Copyright 2022\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport pg, { PoolConfig, Pool, PoolClient, QueryResult } from \"pg\";\nimport types from \"pg-types\";\nimport { flavors, pg as pgConfig } from \"./config\";\nimport { setAgeTypes } from \"./tools/ageParser\";\nimport { Flavor, ConnectionInfo } from \"./types\";\n\nexport class GraphRepository {\n  flavor: Flavor;\n  private _database?: string;\n  private _graph?: string;\n  private _host?: string;\n  private _password?: string;\n  private _pool?: Pool;\n  private _port?: number;\n  private _user?: string;\n\n  constructor({\n    host,\n    port,\n    database,\n    graph,\n    user,\n    password,\n    flavor,\n  }: ConnectionInfo = {}) {\n    this._host = host;\n    this._port = port;\n    this._database = database;\n    this._graph = graph;\n    this._user = user;\n    this._password = password;\n    this.flavor = flavor || flavors.AGE;\n  }\n\n  static async getConnection(\n    { database, flavor, host, password, port, user }: ConnectionInfo = {},\n    closeConnection = true\n  ): Promise<pg.Client | PoolClient> {\n    const client = new pg.Client({\n      user,\n      password,\n      host,\n      database,\n      port,\n    });\n    client.connect();\n    if (flavor === flavors.AGE) {\n      await setAgeTypes(client, types);\n    } else {\n      throw new Error(`unknown flavor ${flavor}`);\n    }\n    if (closeConnection === true) await client.end();\n    return client;\n  }\n\n  static newConnectionPool(poolConnectionConfig: PoolConfig) {\n    return new pg.Pool(poolConnectionConfig);\n  }\n\n  async execute(\n    query: string,\n    params: (string | undefined)[] = []\n  ): Promise<QueryResult> {\n    const client = await this.getConnection();\n    let result = null;\n    try {\n      result = await client.query(query, params);\n    } catch (err) {\n      throw err;\n    } finally {\n      client.release();\n    }\n    return result;\n  }\n\n  async getConnection() {\n    if (!this._pool) {\n      this._pool = GraphRepository.newConnectionPool(\n        this.getPoolConnectionInfo()\n      );\n    }\n    const client = await this._pool.connect();\n    if (this.flavor === \"AGE\") {\n      await setAgeTypes(client, types);\n    } else {\n      await client.query(`set graph_path = ${this._graph}`);\n    }\n    return client;\n  }\n\n  async releaseConnection() {\n    try {\n      if (this._pool) await this._pool.end();\n      return true;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  getPoolConnectionInfo(): PoolConfig {\n    if (!this._host || !this._port || !this._database) {\n      throw new Error(\"missing connection config\");\n    }\n    return {\n      connectionTimeoutMillis: pgConfig.connectionTimeoutMillis,\n      database: this._database,\n      host: this._host,\n      idleTimeoutMillis: pgConfig.idleTimeoutMillis,\n      max: pgConfig.max,\n      password: this._password,\n      port: this._port,\n      user: this._user,\n    };\n  }\n\n  getConnectionInfo() {\n    if (!this._host || !this._port || !this._database) {\n      throw new Error(\"not connected\");\n    }\n    return {\n      host: this._host,\n      port: this._port,\n      database: this._database,\n      user: this._user,\n      password: this._password,\n      graph: this._graph,\n      flavor: this.flavor,\n    };\n  }\n\n  get graph() {\n    return this._graph;\n  }\n}\n"],"mappings":"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"}