{"version":3,"file":"ageParser.js","names":["antlr4","AgtypeLexer","AgtypeParser","CustomAgTypeListener","agTypeParse","input","chars","InputStream","lexer","tokens","CommonTokenStream","parser","buildParseTrees","tree","agType","printer","ParseTreeWalker","DEFAULT","walk","getResult","setAgeTypes","client","types","query","oidResults","rows","length","Error","setTypeParser","typelem"],"sources":["../../src/tools/ageParser.ts"],"sourcesContent":["/**\n * File: /src/tools/ageParser.ts\n * Project: apache-age-client\n * File Created: 13-09-2022 04:45:20\n * Author: Apache Software Foundation\n * -----\n * Last Modified: 13-09-2022 07:01:22\n * Modified By: Clay Risser\n * -----\n * Risser Labs LLC (c) Copyright 2022\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport antlr4 from \"antlr4\";\nimport { PoolClient, Client } from \"pg\";\nimport AgtypeLexer from \"./AgtypeLexer\";\nimport AgtypeParser from \"./AgtypeParser\";\nimport { CustomAgTypeListener } from \"./customAgTypeListener\";\n\nexport function agTypeParse(input: string) {\n  const chars = new antlr4.InputStream(input);\n  const lexer = new AgtypeLexer(chars);\n  const tokens = new antlr4.CommonTokenStream(lexer);\n  const parser = new AgtypeParser(tokens);\n  parser.buildParseTrees = true;\n  const tree = parser.agType();\n  const printer = new CustomAgTypeListener();\n  (antlr4 as any).tree.ParseTreeWalker.DEFAULT.walk(printer, tree);\n  return printer.getResult();\n}\n\nexport async function setAgeTypes(client: PoolClient | Client, types: any) {\n  await client.query(`\n        CREATE EXTENSION IF NOT EXISTS age;\n        LOAD 'age';\n        SET search_path = ag_catalog, \"$user\", public;\n    `);\n  const oidResults = await client.query(`\n        select typelem\n        from pg_type\n        where typname = '_agtype';`);\n  if (oidResults.rows.length < 1) throw new Error();\n  types.setTypeParser(oidResults.rows[0].typelem, agTypeParse);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,MAAP,MAAmB,QAAnB;AAEA,OAAOC,WAAP;AACA,OAAOC,YAAP;AACA,SAASC,oBAAT;AAEA,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAAoC;EACzC,MAAMC,KAAK,GAAG,IAAIN,MAAM,CAACO,WAAX,CAAuBF,KAAvB,CAAd;EACA,MAAMG,KAAK,GAAG,IAAIP,WAAJ,CAAgBK,KAAhB,CAAd;EACA,MAAMG,MAAM,GAAG,IAAIT,MAAM,CAACU,iBAAX,CAA6BF,KAA7B,CAAf;EACA,MAAMG,MAAM,GAAG,IAAIT,YAAJ,CAAiBO,MAAjB,CAAf;EACAE,MAAM,CAACC,eAAP,GAAyB,IAAzB;EACA,MAAMC,IAAI,GAAGF,MAAM,CAACG,MAAP,EAAb;EACA,MAAMC,OAAO,GAAG,IAAIZ,oBAAJ,EAAhB;EACCH,MAAD,CAAgBa,IAAhB,CAAqBG,eAArB,CAAqCC,OAArC,CAA6CC,IAA7C,CAAkDH,OAAlD,EAA2DF,IAA3D;EACA,OAAOE,OAAO,CAACI,SAAR,EAAP;AACD;AAED,OAAO,eAAeC,WAAf,CAA2BC,MAA3B,EAAwDC,KAAxD,EAAoE;EACzE,MAAMD,MAAM,CAACE,KAAP,CAAc;AACtB;AACA;AACA;AACA,KAJQ,CAAN;EAKA,MAAMC,UAAU,GAAG,MAAMH,MAAM,CAACE,KAAP,CAAc;AACzC;AACA;AACA,mCAH2B,CAAzB;EAIA,IAAIC,UAAU,CAACC,IAAX,CAAgBC,MAAhB,GAAyB,CAA7B,EAAgC,MAAM,IAAIC,KAAJ,EAAN;EAChCL,KAAK,CAACM,aAAN,CAAoBJ,UAAU,CAACC,IAAX,CAAgB,CAAhB,EAAmBI,OAAvC,EAAgDzB,WAAhD;AACD"}